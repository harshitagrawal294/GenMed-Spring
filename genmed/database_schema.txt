CREATE TABLE User
(
  first_name VARCHAR(16) NOT NULL,
  last_name VARCHAR(32),
  user_id INT NOT NULL,
  password VARCHAR(48) NOT NULL,
  PRIMARY KEY (user_id)
);

CREATE TABLE genericDrugs
(
  gen_id INT NOT NULL,
  name VARCHAR(64) NOT NULL,
  PRIMARY KEY (gen_id)
);

CREATE TABLE userPhone
(
  phone_no VARCHAR(12) NOT NULL,
  user_id INT NOT NULL,
  PRIMARY KEY (phone_no, user_id),
  FOREIGN KEY (user_id) REFERENCES User(user_id)
);

CREATE TABLE Brand
(
  brand_id INT NOT NULL,
  brand_name VARCHAR(32) NOT NULL,
  PRIMARY KEY (brand_id)
);

CREATE TABLE drugComponents
(
  comp_id INT NOT NULL,
  comp_name VARCHAR(48) NOT NULL,
  PRIMARY KEY (comp_id)
);

CREATE TABLE userEmail
(
  email_id INT NOT NULL,
  email_id_type ENUM('Primary', 'Other') NOT NULL,
  user_id INT NOT NULL,
  PRIMARY KEY (email_id),
  FOREIGN KEY (user_id) REFERENCES User(user_id)
);

CREATE TABLE pincodeTable
(
  pincode VARCHAR(6) NOT NULL,
  locality VARCHAR(32) NOT NULL,
  city VARCHAR(32) NOT NULL,
  district VARCHAR(32) NOT NULL,
  state VARCHAR(16) NOT NULL,
  PRIMARY KEY (pincode)
);

CREATE TABLE Address
(
  plot_no VARCHAR(16),
  street VARCHAR(32),
  latitude NUMERIC(13,10) NOT NULL,
  longitude NUMERIC(13,10) NOT NULL,
  address_id INT NOT NULL,
  pincode VARCHAR(6) NOT NULL,
  PRIMARY KEY (address_id),
  FOREIGN KEY (pincode) REFERENCES pincodeTable(pincode)
);

CREATE TABLE Manufacturer
(
  name VARCHAR(48) NOT NULL,
  mfg_license VARCHAR(12) NOT NULL,
  type ENUM('Generic', 'Branded', 'Both') NOT NULL,
  address_id INT NOT NULL,
  brand_id INT NOT NULL,
  PRIMARY KEY (address_id, brand_id),
  FOREIGN KEY (address_id) REFERENCES Address(address_id),
  FOREIGN KEY (brand_id) REFERENCES Brand(brand_id)
);

CREATE TABLE Drugs
(
  drug_id INT NOT NULL,
  name VARCHAR(48) NOT NULL,
  gen_id INT NOT NULL,
  brand_id INT NOT NULL,
  PRIMARY KEY (drug_id),
  FOREIGN KEY (gen_id) REFERENCES genericDrugs(gen_id),
  FOREIGN KEY (brand_id) REFERENCES Brand(brand_id)
);

CREATE TABLE genericDrugCmposition
(
  percent NUMERIC(4,2) NOT NULL,
  gen_id INT NOT NULL,
  comp_id INT NOT NULL,
  PRIMARY KEY (gen_id, comp_id),
  FOREIGN KEY (gen_id) REFERENCES genericDrugs(gen_id),
  FOREIGN KEY (comp_id) REFERENCES drugComponents(comp_id)
);

CREATE TABLE addressOfUser
(
  address_type ENUM('Home', 'Work', 'Other') NOT NULL,
  user_id INT NOT NULL,
  address_id INT NOT NULL,
  PRIMARY KEY (user_id, address_id),
  FOREIGN KEY (user_id) REFERENCES User(user_id),
  FOREIGN KEY (address_id) REFERENCES Address(address_id)
);

CREATE TABLE Shop
(
  shop_id INT NOT NULL,
  shop_name VARCHAR(64) NOT NULL,
  email_id VARCHAR(48) NOT NULL,
  license VARCHAR(10) NOT NULL,
  shop_login_pin VARCHAR(10) NOT NULL,
  address_id INT NOT NULL,
  PRIMARY KEY (shop_id),
  FOREIGN KEY (address_id) REFERENCES Address(address_id)
);

CREATE TABLE drugBatch
(
  batch_no VARCHAR(12) NOT NULL,
  batch_id INT NOT NULL,
  exp_date DATE NOT NULL,
  price NUMERIC(6,2) NOT NULL,
  quanity INT NOT NULL,
  mfg_date DATE NOT NULL,
  drug_id INT NOT NULL,
  PRIMARY KEY (batch_id),
  FOREIGN KEY (drug_id) REFERENCES Drugs(drug_id)
);

CREATE TABLE Orders
(
  order_id INT NOT NULL,
  order_status ENUM('Ordered', 'Dispatched', 'Delivered', 'Returned', 'Cancelled') NOT NULL,
  order_date DATE NOT NULL,
  bill_amount NUMERIC(7,2) NOT NULL,
  shop_id INT NOT NULL,
  user_id INT NOT NULL,
  PRIMARY KEY (order_id),
  FOREIGN KEY (shop_id) REFERENCES Shop(shop_id),
  FOREIGN KEY (user_id) REFERENCES User(user_id)
);

CREATE TABLE shopPhone
(
  phone_no VARCHAR(13) NOT NULL,
  shop_id INT NOT NULL,
  PRIMARY KEY (phone_no, shop_id),
  FOREIGN KEY (shop_id) REFERENCES Shop(shop_id)
);

CREATE TABLE suppliedTo
(
  quantity_arrived INT NOT NULL,
  date_of_arrival DATE NOT NULL,
  quantity_left INT NOT NULL;
  shop_id INT NOT NULL,
  batch_id INT NOT NULL,
  PRIMARY KEY (shop_id, batch_id),
  FOREIGN KEY (shop_id) REFERENCES Shop(shop_id),
  FOREIGN KEY (batch_id) REFERENCES drugBatch(batch_id)
);

CREATE TABLE itemsOrdered
(
  quantity INT NOT NULL,
  price NUMERIC(5,2) NOT NULL,
  order_id INT NOT NULL,
  batch_id INT NOT NULL,
  PRIMARY KEY (order_id, batch_id),
  FOREIGN KEY (order_id) REFERENCES Orders(order_id),
  FOREIGN KEY (batch_id) REFERENCES drugBatch(batch_id)
);

CREATE TABLE Staff
(
  salary NUMERIC(8,2) NOT NULL,
  date_of_joining DATE NOT NULL,
  user_id INT NOT NULL,
  shop_id INT NOT NULL,
  PRIMARY KEY (user_id, shop_id),
  FOREIGN KEY (user_id) REFERENCES User(user_id),
  FOREIGN KEY (shop_id) REFERENCES Shop(shop_id)
);

CREATE TABLE Owner
(
  user_id INT NOT NULL,
  shop_id INT NOT NULL,
  PRIMARY KEY (user_id, shop_id),
  FOREIGN KEY (user_id) REFERENCES User(user_id),
  FOREIGN KEY (shop_id) REFERENCES Shop(shop_id)
);

CREATE TABLE Pharmacist
(
  registration_no VARCHAR(10) NOT NULL,
  date_of_first_reg DATE NOT NULL,
  registration_council VARCHAR(32) NOT NULL,
  pharmacist_id INT NOT NULL,
  shop_id INT NOT NULL,
  user_id INT NOT NULL,
  PRIMARY KEY (pharmacist_id),
  FOREIGN KEY (shop_id) REFERENCES Shop(shop_id),
  FOREIGN KEY (user_id) REFERENCES User(user_id)
);

CREATE TABLE pharmacistQualifications
(
  degree VARCHAR(32) NOT NULL,
  college_name VARCHAR(48) NOT NULL,
  year_of_passing INT NOT NULL,
  pharmacist_id INT NOT NULL,
  PRIMARY KEY (degree, pharmacist_id),
  FOREIGN KEY (pharmacist_id) REFERENCES Pharmacist(pharmacist_id)
);

CREATE TABLE Reviews
(
  comment VARCHAR(1024) NOT NULL,
  rating NUMERIC(3,2) NOT NULL,
  review_id INT NOT NULL,
  order_id INT NOT NULL,
  user_id INT NOT NULL,
  PRIMARY KEY (review_id),
  FOREIGN KEY (order_id) REFERENCES Orders(order_id),
  FOREIGN KEY (user_id) REFERENCES User(user_id)
);